{"version":3,"sources":["todo.js"],"names":["todoForm","document","querySelector","toDoInput","toDoList","TODO_LS","toDoArray","toDoInit","loadToDos","addEventListener","toDoHandleSubmit","saveToDo","text","newTodo","id","length","push","saveToDos","localStorage","setItem","JSON","stringify","deleteToDo","event","target","parentNode","remove","taget","btn","li","cleanToDos","filter","currentTodo","parseInt","scrollDown","scrollTop","paintToDo","createElement","delBtn","checkboxLabel","checkboxInput","span","innerText","type","classList","add","newId","appendChild","preventDefault","todo","value","name","todos","getItem","console","log","parse","forEach"],"mappings":";AAAA,IAAMA,EAAWC,SAASC,cAAc,gBACpCC,EAAYH,EAASE,cAAc,SACnCE,EAAWH,SAASC,cAAc,gBAEhCG,EAAU,QACZC,EAAY,GAGVC,EAAW,WACbC,IACAR,EAASS,iBAAiB,SAAUC,IAGlCC,EAAW,SAACC,GACRC,IAAAA,EAAU,CACZC,GAAIR,EAAUS,OAAS,EACvBH,KAAMA,GAGVN,EAAUU,KAAKH,GACfI,KAEEA,EAAY,WACdC,aAAaC,QAAQd,EAASe,KAAKC,UAAUf,KAG3CgB,EAAa,SAACC,GAChBA,EAAMC,OAAOC,WAAWC,SACZH,EAAMI,MAAZC,IACAC,EAAKN,EAAMC,OAAOC,WACxBI,EAAGH,SACGI,IAAAA,EAAaxB,EAAUyB,OAAO,SAACC,GAC1BA,OAAAA,EAAYlB,KAAOmB,SAASJ,EAAGf,MAE1CR,EAAYwB,EACZb,KAGEiB,EAAa,WACf9B,EAAS+B,UAAY,OAGnBC,EAAY,SAACxB,GACTiB,IAAAA,EAAK5B,SAASoC,cAAc,MAC5BC,EAASrC,SAASoC,cAAc,UAChCE,EAAgBtC,SAASoC,cAAc,SACvCG,EAAgBvC,SAASoC,cAAc,SACvCI,EAAOxC,SAASoC,cAAc,QACpCI,EAAKC,UAAY9B,EACjB4B,EAAcG,KAAO,WACrBJ,EAAcK,UAAUC,IAAI,qBAEtBC,IAAAA,EAAQxC,EAAUS,OAAS,EACjCc,EAAGf,GAAKgC,EACRR,EAAOI,UAAY,IAEnBJ,EAAO7B,iBAAiB,QAASa,GAEjCiB,EAAcQ,YAAYP,GAC1BD,EAAcQ,YAAYN,GAC1BZ,EAAGkB,YAAYR,GACfV,EAAGkB,YAAYT,GACflC,EAAS2C,YAAYlB,GACrBlB,EAASC,GACTsB,KAGExB,EAAmB,SAACa,GACtBA,EAAMyB,iBACAC,IAAAA,EAAO9C,EAAU+C,MACvBd,EAAUa,GAEV9C,EAAU+C,MAAQ,IAGhB1C,EAAY,SAAC2C,GACTC,IAAAA,EAAQlC,aAAamC,QAAQhD,IACnCiD,QAAQC,IAAIH,GACE,OAAVA,IACoBhC,KAAKoC,MAAMJ,GACnBK,QAAQ,SAACzB,GACjBI,EAAUJ,EAAYpB,SAIlCL","file":"todo.12e044c6.map","sourceRoot":"..","sourcesContent":["const todoForm = document.querySelector(\".js-toDoForm\"),\r\n    toDoInput = todoForm.querySelector(\"input\"),\r\n    toDoList = document.querySelector(\".js-toDoList\");\r\n\r\nconst TODO_LS = \"toDos\";\r\nlet toDoArray = [];\r\n\r\n\r\nconst toDoInit = () => {\r\n    loadToDos();\r\n    todoForm.addEventListener('submit', toDoHandleSubmit);\r\n};\r\n\r\nconst saveToDo = (text) => {\r\n    const newTodo = {\r\n        id: toDoArray.length + 1,\r\n        text: text\r\n    }\r\n\r\n    toDoArray.push(newTodo);\r\n    saveToDos();\r\n}\r\nconst saveToDos = () => {\r\n    localStorage.setItem(TODO_LS, JSON.stringify(toDoArray));\r\n}\r\n\r\nconst deleteToDo = (event) => {\r\n    event.target.parentNode.remove();\r\n    const btn = event.taget;\r\n    const li = event.target.parentNode;\r\n    li.remove();\r\n    const cleanToDos = toDoArray.filter((currentTodo) => {\r\n        return currentTodo.id !== parseInt(li.id);\r\n    });\r\n    toDoArray = cleanToDos;\r\n    saveToDos();\r\n};\r\n\r\nconst scrollDown = () => {\r\n    toDoList.scrollTop = 99999;\r\n};\r\n\r\nconst paintToDo = (text) => {\r\n    const li = document.createElement(\"li\");\r\n    const delBtn = document.createElement(\"button\");\r\n    const checkboxLabel = document.createElement(\"label\");\r\n    const checkboxInput = document.createElement(\"input\");\r\n    const span = document.createElement(\"span\");\r\n    span.innerText = text;\r\n    checkboxInput.type = 'checkbox';\r\n    checkboxLabel.classList.add('material-checkbox');\r\n\r\n    const newId = toDoArray.length + 1;\r\n    li.id = newId;\r\n    delBtn.innerText = \"âœ•\";\r\n\r\n    delBtn.addEventListener('click', deleteToDo);\r\n\r\n    checkboxLabel.appendChild(checkboxInput);\r\n    checkboxLabel.appendChild(span);\r\n    li.appendChild(checkboxLabel);\r\n    li.appendChild(delBtn);\r\n    toDoList.appendChild(li);\r\n    saveToDo(text);\r\n    scrollDown();\r\n};\r\n\r\nconst toDoHandleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const todo = toDoInput.value;\r\n    paintToDo(todo);\r\n\r\n    toDoInput.value = \"\";\r\n}\r\n\r\nconst loadToDos = (name) => {\r\n    const todos = localStorage.getItem(TODO_LS);\r\n    console.log(todos);\r\n    if (todos !== null) {\r\n        const parsedToDos = JSON.parse(todos);\r\n        parsedToDos.forEach((currentTodo) => {\r\n            paintToDo(currentTodo.text);\r\n        });\r\n    }\r\n};\r\ntoDoInit();"]}
{"version":3,"sources":["todo.js"],"names":["todoForm","document","querySelector","toDoInput","toDoList","TODO_LS","toDoArray","toDoInit","loadToDos","addEventListener","toDoHandleSubmit","saveToDo","id","checked","text","newTodo","push","saveToDos","localStorage","setItem","JSON","stringify","deleteToDo","event","target","parentNode","remove","taget","btn","li","cleanToDos","filter","currentTodo","parseInt","scrollDown","scrollTop","checkTodo","thisObj","checkbox","todoId","dataset","todoid","todos","getItem","console","log","parsedToDos","parse","forEach","paintToDo","createElement","delBtn","checkboxLabel","checkboxInput","span","newId","Date","getTime","innerText","type","classList","add","appendChild","preventDefault","todo","value","name"],"mappings":";AAAA,IAAMA,EAAWC,SAASC,cAAc,gBACpCC,EAAYH,EAASE,cAAc,SACnCE,EAAWH,SAASC,cAAc,gBAEhCG,EAAU,QACZC,EAAY,GAGVC,EAAW,WACbC,IACAR,EAASS,iBAAiB,SAAUC,IAGlCC,EAAW,SAACC,EAAGC,EAAQC,GACnBC,IAAAA,EAAU,CACZH,GAAAA,EACAC,QAASA,EACTC,KAAMA,GAGVR,EAAUU,KAAKD,GACfE,KAEEA,EAAY,WACdC,aAAaC,QAAQd,EAASe,KAAKC,UAAUf,KAG3CgB,EAAa,SAACC,GAChBA,EAAMC,OAAOC,WAAWC,SACZH,EAAMI,MAAZC,IACAC,EAAKN,EAAMC,OAAOC,WACxBI,EAAGH,SACGI,IAAAA,EAAaxB,EAAUyB,OAAO,SAACC,GAC1BA,OAAAA,EAAYpB,KAAOqB,SAASJ,EAAGjB,MAE1CN,EAAYwB,EACZb,KAGEiB,EAAa,WACf9B,EAAS+B,UAAY,OAGnBC,EAAY,SAACC,GACTC,IAAAA,EAAWf,MAAMC,OACjBe,EAASD,EAASb,WAAWe,QAAQC,OACrC5B,EAAUyB,EAASb,WAAWvB,cAAc,wBAAwBW,QACpE6B,EAAQxB,aAAayB,QAAQtC,GAE/BqC,GADJE,QAAQC,IAAIH,GACE,OAAVA,EAAgB,CACVI,IAAAA,EAAc1B,KAAK2B,MAAML,GAC/BI,EAAYE,QAAQ,SAAChB,GACdA,EAAYpB,IAAM2B,IACjBP,EAAYnB,QAAUA,KAG9BP,EAAYwC,EACZ7B,MAIFgC,EAAY,SAACnC,EAAKD,GACdgB,IAAAA,EAAK5B,SAASiD,cAAc,MAC5BC,EAASlD,SAASiD,cAAc,UAChCE,EAAgBnD,SAASiD,cAAc,SACvCG,EAAgBpD,SAASiD,cAAc,SACvCI,EAAOrD,SAASiD,cAAc,QAC9BK,GAAQ,IAAIC,MAAOC,UACzBH,EAAKI,UAAY5C,EACjBuC,EAAcM,KAAO,WACrBf,QAAQC,IAAIhC,GACZwC,EAAcxC,QAAUA,EACxBuC,EAAcQ,UAAUC,IAAI,qBAC5BT,EAAc3C,iBAAiB,QAAQ2B,GACvCgB,EAAcZ,QAAQC,OAASc,EAE/B1B,EAAGjB,GAAK2C,EACRJ,EAAOO,UAAY,IAEnBP,EAAO1C,iBAAiB,QAASa,GAEjC8B,EAAcU,YAAYT,GAC1BD,EAAcU,YAAYR,GAC1BzB,EAAGiC,YAAYV,GACfvB,EAAGiC,YAAYX,GACf/C,EAAS0D,YAAYjC,GACrBlB,EAAS4C,EAAM1C,EAAQC,GACvBoB,KAGExB,EAAmB,SAACa,GACtBA,EAAMwC,iBACAC,IAAAA,EAAO7D,EAAU8D,MACvBhB,EAAUe,GAAK,GAEf7D,EAAU8D,MAAQ,IAGhBzD,EAAY,SAAC0D,GACTxB,IAAAA,EAAQxB,aAAayB,QAAQtC,IACnCuC,QAAQC,IAAIH,GACE,OAAVA,IACoBtB,KAAK2B,MAAML,GACnBM,QAAQ,SAAChB,GACjBiB,EAAUjB,EAAYlB,KAAKkB,EAAYnB,YAInDN","file":"todo.2f3cc1d7.map","sourceRoot":"..","sourcesContent":["const todoForm = document.querySelector(\".js-toDoForm\"),\r\n    toDoInput = todoForm.querySelector(\"input\"),\r\n    toDoList = document.querySelector(\".js-toDoList\");\r\n\r\nconst TODO_LS = \"toDos\";\r\nlet toDoArray = [];\r\n\r\n\r\nconst toDoInit = () => {\r\n    loadToDos();\r\n    todoForm.addEventListener('submit', toDoHandleSubmit);\r\n};\r\n\r\nconst saveToDo = (id,checked,text) => {\r\n    const newTodo = {\r\n        id,\r\n        checked: checked,\r\n        text: text\r\n    }\r\n\r\n    toDoArray.push(newTodo);\r\n    saveToDos();\r\n}\r\nconst saveToDos = () => {\r\n    localStorage.setItem(TODO_LS, JSON.stringify(toDoArray));\r\n}\r\n\r\nconst deleteToDo = (event) => {\r\n    event.target.parentNode.remove();\r\n    const btn = event.taget;\r\n    const li = event.target.parentNode;\r\n    li.remove();\r\n    const cleanToDos = toDoArray.filter((currentTodo) => {\r\n        return currentTodo.id !== parseInt(li.id);\r\n    });\r\n    toDoArray = cleanToDos;\r\n    saveToDos();\r\n};\r\n\r\nconst scrollDown = () => {\r\n    toDoList.scrollTop = 99999;\r\n};\r\n\r\nconst checkTodo = (thisObj) => {\r\n    const checkbox = event.target;\r\n    const todoId = checkbox.parentNode.dataset.todoid;\r\n    const checked = checkbox.parentNode.querySelector('input[type=checkbox]').checked;\r\n    const todos = localStorage.getItem(TODO_LS);\r\n    console.log(todos);\r\n    if (todos !== null) {\r\n        const parsedToDos = JSON.parse(todos);\r\n        parsedToDos.forEach((currentTodo) => {\r\n            if(currentTodo.id == todoId){\r\n                currentTodo.checked = checked;\r\n            }\r\n        });\r\n        toDoArray = parsedToDos;\r\n        saveToDos();\r\n    }\r\n}\r\n\r\nconst paintToDo = (text,checked) => {\r\n    const li = document.createElement(\"li\");\r\n    const delBtn = document.createElement(\"button\");\r\n    const checkboxLabel = document.createElement(\"label\");\r\n    const checkboxInput = document.createElement(\"input\");\r\n    const span = document.createElement(\"span\");\r\n    const newId = new Date().getTime();\r\n    span.innerText = text;\r\n    checkboxInput.type = 'checkbox';\r\n    console.log(checked);\r\n    checkboxInput.checked = checked;\r\n    checkboxLabel.classList.add('material-checkbox');\r\n    checkboxLabel.addEventListener('click',checkTodo);\r\n    checkboxLabel.dataset.todoid = newId;\r\n\r\n    li.id = newId;\r\n    delBtn.innerText = \"âœ•\";\r\n\r\n    delBtn.addEventListener('click', deleteToDo);\r\n\r\n    checkboxLabel.appendChild(checkboxInput);\r\n    checkboxLabel.appendChild(span);\r\n    li.appendChild(checkboxLabel);\r\n    li.appendChild(delBtn);\r\n    toDoList.appendChild(li);\r\n    saveToDo(newId,checked,text);\r\n    scrollDown();\r\n};\r\n\r\nconst toDoHandleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const todo = toDoInput.value;\r\n    paintToDo(todo,false);\r\n\r\n    toDoInput.value = \"\";\r\n}\r\n\r\nconst loadToDos = (name) => {\r\n    const todos = localStorage.getItem(TODO_LS);\r\n    console.log(todos);\r\n    if (todos !== null) {\r\n        const parsedToDos = JSON.parse(todos);\r\n        parsedToDos.forEach((currentTodo) => {\r\n            paintToDo(currentTodo.text,currentTodo.checked);\r\n        });\r\n    }\r\n};\r\ntoDoInit();"]}